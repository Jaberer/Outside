/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.Date;
//import java.util.Timer;
import javax.swing.Timer;
import javax.swing.JFrame;

/**
 *
 * @author Joseph
 */
public class InformationGUI extends JFrame implements ActionListener
{
    /*
    private static Timer t;
    private static SimpleDateFormat sdf;
    private static Date start;
    * */

    /**
     * Creates new form TimerGUI
     */
    private final int minute = 60;
    private ClockListener clock = new ClockListener();
    private final Timer timerObject = new Timer(1000, clock);

    private int seconds;

    private int mineCount;

    public InformationGUI()
    {
        initComponents();
        timerObject.setInitialDelay(0);

        //main(null);
        /*
        t = new Timer();
        sdf = new SimpleDateFormat("hh:mm:ss");
        start = new Date();
        */
        this.setLocation(300, 550);
        setVisible(true);
    }

    @Override
    public void actionPerformed(ActionEvent e)
    {
        //throw new UnsupportedOperationException("Not supported yet.");
        seconds %= minute;
        label1.setText(String.valueOf(seconds));
        seconds++;
    }


    private class ClockListener implements ActionListener
    {
        private int count = 0;

        @Override
        public void actionPerformed(ActionEvent e)
        {
            count %= minute;
            label1.setText(String.valueOf(count));
            count++;
        }

        public void resetCounter()
        {
            count = 0;
        }
    }

    public void startClock()
    {
        timerObject.start();
    }

    public void stopClock()
    {
        timerObject.stop();
    }

    public void resetClock()
    {
        timerObject.restart();
        //count = 0;
        clock.resetCounter();
        timerObject.stop();
    }

    public int getTime()
    {
        return seconds;
    }

    public int getMines()
    {
        return Integer.parseInt(label2.getText());
    }

    public void setMines(int mines)
    {
        label2.setText("" + mines);
    }

    /*
    public ClockListener getClockListener()
    {
        return cl;
    }
    */

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents()
    {
        setResizable(false);


        label1 = new java.awt.Label();
        label2 = new java.awt.Label();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        int height = label1.getHeight();
        //Font LabelFont = new Font("sansserif", Font.BOLD, height);
        Font LabelFont = new Font("Champagne & Limousines", 0, 36);

        label1.setFont(LabelFont);
        label1.setText("0");

        //label2.setText("label2");
        label2.setFont(LabelFont);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(label2, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE)
                    .addComponent(label1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TimerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TimerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TimerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TimerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            @Override
            public void run()
            {
                /*
                Date now = new Date();
                sdf.format(now.getTime() - start.getTime());
                System.out.println(sdf);
                * */
                new InformationGUI().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify
    private java.awt.Label label1;
    private java.awt.Label label2;
    // End of variables declaration
}
